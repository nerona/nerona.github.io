{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["/*global Qiniu */\n/*global plupload */\n/*global FileProgress */\n/*global hljs */\n\n\n$(function() {\n    var img_list = [];\n    var uploader = Qiniu.uploader({\n        runtimes: 'html5,flash,html4',\n        browse_button: 'pickfiles',\n        container: 'container',\n        chunk_size: '4mb',\n\n        // uptoken_url: $('#uptoken_url').val(),\n        uptoken: localStorage.getItem('qiniu_token'),\n        multi_selection: !(mOxie.Env.OS.toLowerCase()===\"ios\"),\n\n\n        filters : {\n            max_file_size : '100000mb',\n            prevent_duplicates: true,\n            //Specify what files to browse for\n            mime_types: [\n                // {title : \"mp4 files\", extensions : \"mkv\"}\n                // {title : \"flv files\", extensions : \"flv,jpg\"}\n                // {title : \"Video files\", extensions : \"flv,mpg,mpeg,avi,wmv,mov,asf,rm,rmvb,mkv,m4v,mp4\"}\n                // {title : \"Video files\", extensions : \"avi,mp4,wmv,mpg,mov,flv,mkv,mpeg\"}\n                // {title : \"Image files\", extensions : \"jpg,gif,png\"}\n                // {title : \"Zip files\", extensions : \"zip\"}\n            ]\n        },\n        // uptoken_func: function(){\n        //     var ajax = new XMLHttpRequest();\n        //     ajax.open('GET', $('#uptoken_url').val(), false);\n        //     ajax.setRequestHeader(\"If-Modified-Since\", \"0\");\n        //     ajax.send();\n        //     if (ajax.status === 200) {\n        //         var res = JSON.parse(ajax.responseText);\n        //         console.log('custom uptoken_func:' + res.uptoken);\n        //         return res.uptoken;\n        //     } else {\n        //         console.log('custom uptoken_func err');\n        //         return '';\n        //     }\n        // },\n        domain: $('#domain').val(),\n        get_new_uptoken: false,\n        // downtoken_url: '/downtoken',\n        // unique_names: true,\n        // save_key: true,\n        // x_vars: {\n        //     'id': '1234',\n        //     'time': function(up, file) {\n        //         var time = (new Date()).getTime();\n        //         // do something with 'time'\n        //         return time;\n        //     },\n        // },\n        auto_start: true,\n        log_level: 5,\n        resize : {\n            width : 200,\n            height : 200,\n            quality : 72,\n            crop: true // crop to exact dimensions\n        },\n        init: {\n            'FilesAdded': function(up, files) {\n                plupload.each(files, function(file) {\n                    var progress = new FileProgress(file, 'fsUploadProgress');\n                    progress.setStatus(\"等待...\");\n                    progress.bindUploadCancel(up);\n                });\n            },\n            'BeforeUpload': function(up, file) {\n                var progress = new FileProgress(file, 'fsUploadProgress');\n                var chunk_size = plupload.parseSize(this.getOption('chunk_size'));\n                if (up.runtime === 'html5' && chunk_size) {\n                    progress.setChunkProgess(chunk_size);\n                }\n            },\n            'UploadProgress': function(up, file) {\n                /*var progress = new FileProgress(file, 'fsUploadProgress');\n                var chunk_size = plupload.parseSize(this.getOption('chunk_size'));\n                progress.setProgress(file.percent + \"%\", file.speed, chunk_size);*/\n            },\n            'UploadComplete': function() {\n                //$('#success').show();\n            },\n            'FileUploaded': function(up, file, info) {\n                var progress = new FileProgress(file, 'fsUploadProgress');\n                progress.setComplete(up, info, 1);\n                img_list.push(localStorage.getItem('img_item_1'));\n                localStorage.setItem('img_list_1', img_list);\n            },\n            'Error': function(up, err, errTip) {\n                //$('table').show();\n                var progress = new FileProgress(err.file, 'fsUploadProgress');\n                progress.setError();\n                progress.setStatus(errTip);\n            }\n                // ,\n                // 'Key': function(up, file) {\n                //     var key = \"\";\n                //     // do something with key\n                //     return key\n                // }\n        }\n    });\n\n    uploader.bind('FileUploaded', function() {\n        console.log('hello man,a file is uploaded');\n    });\n\n\n    var uploader2 = Qiniu.uploader({\n        runtimes: 'html5,flash,html4',\n        browse_button: 'pickfiles2',\n        container: 'container2',\n        chunk_size: '4mb',\n\n        // uptoken_url: $('#uptoken_url').val(),\n        uptoken: localStorage.getItem('qiniu_token'),\n        multi_selection: !(mOxie.Env.OS.toLowerCase()===\"ios\"),\n\n\n        filters : {\n            max_file_size : '100000mb',\n            prevent_duplicates: true,\n            //Specify what files to browse for\n            mime_types: [\n                // {title : \"mp4 files\", extensions : \"mkv\"}\n                // {title : \"flv files\", extensions : \"flv,jpg\"}\n                // {title : \"Video files\", extensions : \"flv,mpg,mpeg,avi,wmv,mov,asf,rm,rmvb,mkv,m4v,mp4\"}\n                // {title : \"Video files\", extensions : \"avi,mp4,wmv,mpg,mov,flv,mkv,mpeg\"}\n                // {title : \"Image files\", extensions : \"jpg,gif,png\"}\n                // {title : \"Zip files\", extensions : \"zip\"}\n            ]\n        },\n        // uptoken_func: function(){\n        //     var ajax = new XMLHttpRequest();\n        //     ajax.open('GET', $('#uptoken_url').val(), false);\n        //     ajax.setRequestHeader(\"If-Modified-Since\", \"0\");\n        //     ajax.send();\n        //     if (ajax.status === 200) {\n        //         var res = JSON.parse(ajax.responseText);\n        //         console.log('custom uptoken_func:' + res.uptoken);\n        //         return res.uptoken;\n        //     } else {\n        //         console.log('custom uptoken_func err');\n        //         return '';\n        //     }\n        // },\n        domain: $('#domain').val(),\n        get_new_uptoken: false,\n        // downtoken_url: '/downtoken',\n        // unique_names: true,\n        // save_key: true,\n        // x_vars: {\n        //     'id': '1234',\n        //     'time': function(up, file) {\n        //         var time = (new Date()).getTime();\n        //         // do something with 'time'\n        //         return time;\n        //     },\n        // },\n        auto_start: true,\n        log_level: 5,\n        resize : {\n            width : 200,\n            height : 200,\n            quality : 72,\n            crop: true // crop to exact dimensions\n        },\n        init: {\n            'FilesAdded': function(up, files) {\n                plupload.each(files, function(file) {\n                    var progress = new FileProgress(file, 'fsUploadProgress');\n                    progress.setStatus(\"等待...\");\n                    progress.bindUploadCancel(up);\n                });\n            },\n            'BeforeUpload': function(up, file) {\n                var progress = new FileProgress(file, 'fsUploadProgress');\n                var chunk_size = plupload.parseSize(this.getOption('chunk_size'));\n                if (up.runtime === 'html5' && chunk_size) {\n                    progress.setChunkProgess(chunk_size);\n                }\n            },\n            'UploadProgress': function(up, file) {\n                /*var progress = new FileProgress(file, 'fsUploadProgress');\n                 var chunk_size = plupload.parseSize(this.getOption('chunk_size'));\n                 progress.setProgress(file.percent + \"%\", file.speed, chunk_size);*/\n            },\n            'UploadComplete': function() {\n                //$('#success').show();\n            },\n            'FileUploaded': function(up, file, info) {\n                var progress = new FileProgress(file, 'fsUploadProgress');\n                progress.setComplete(up, info, 2);\n                img_list.push(localStorage.getItem('img_item_2'));\n                localStorage.setItem('img_list_2', img_list);\n            },\n            'Error': function(up, err, errTip) {\n                //$('table').show();\n                var progress = new FileProgress(err.file, 'fsUploadProgress');\n                progress.setError();\n                progress.setStatus(errTip);\n            }\n            // ,\n            // 'Key': function(up, file) {\n            //     var key = \"\";\n            //     // do something with key\n            //     return key\n            // }\n        }\n    });\n\n    uploader2.bind('FileUploaded', function() {\n        console.log('hello man,a file2 is uploaded');\n    });\n\n    var uploader3 = Qiniu.uploader({\n        runtimes: 'html5,flash,html4',\n        browse_button: 'pickfiles3',\n        container: 'container3',\n        chunk_size: '4mb',\n\n        // uptoken_url: $('#uptoken_url').val(),\n        uptoken: localStorage.getItem('qiniu_token'),\n        multi_selection: !(mOxie.Env.OS.toLowerCase()===\"ios\"),\n\n\n        filters : {\n            max_file_size : '100000mb',\n            prevent_duplicates: true,\n            //Specify what files to browse for\n            mime_types: [\n                // {title : \"mp4 files\", extensions : \"mkv\"}\n                // {title : \"flv files\", extensions : \"flv,jpg\"}\n                // {title : \"Video files\", extensions : \"flv,mpg,mpeg,avi,wmv,mov,asf,rm,rmvb,mkv,m4v,mp4\"}\n                // {title : \"Video files\", extensions : \"avi,mp4,wmv,mpg,mov,flv,mkv,mpeg\"}\n                // {title : \"Image files\", extensions : \"jpg,gif,png\"}\n                // {title : \"Zip files\", extensions : \"zip\"}\n            ]\n        },\n        // uptoken_func: function(){\n        //     var ajax = new XMLHttpRequest();\n        //     ajax.open('GET', $('#uptoken_url').val(), false);\n        //     ajax.setRequestHeader(\"If-Modified-Since\", \"0\");\n        //     ajax.send();\n        //     if (ajax.status === 200) {\n        //         var res = JSON.parse(ajax.responseText);\n        //         console.log('custom uptoken_func:' + res.uptoken);\n        //         return res.uptoken;\n        //     } else {\n        //         console.log('custom uptoken_func err');\n        //         return '';\n        //     }\n        // },\n        domain: $('#domain').val(),\n        get_new_uptoken: false,\n        // downtoken_url: '/downtoken',\n        // unique_names: true,\n        // save_key: true,\n        // x_vars: {\n        //     'id': '1234',\n        //     'time': function(up, file) {\n        //         var time = (new Date()).getTime();\n        //         // do something with 'time'\n        //         return time;\n        //     },\n        // },\n        auto_start: true,\n        log_level: 5,\n        resize : {\n            width : 200,\n            height : 200,\n            quality : 72,\n            crop: true // crop to exact dimensions\n        },\n        init: {\n            'FilesAdded': function(up, files) {\n                plupload.each(files, function(file) {\n                    var progress = new FileProgress(file, 'fsUploadProgress');\n                    progress.setStatus(\"等待...\");\n                    progress.bindUploadCancel(up);\n                });\n            },\n            'BeforeUpload': function(up, file) {\n                var progress = new FileProgress(file, 'fsUploadProgress');\n                var chunk_size = plupload.parseSize(this.getOption('chunk_size'));\n                if (up.runtime === 'html5' && chunk_size) {\n                    progress.setChunkProgess(chunk_size);\n                }\n            },\n            'UploadProgress': function(up, file) {\n                /*var progress = new FileProgress(file, 'fsUploadProgress');\n                 var chunk_size = plupload.parseSize(this.getOption('chunk_size'));\n                 progress.setProgress(file.percent + \"%\", file.speed, chunk_size);*/\n            },\n            'UploadComplete': function() {\n                //$('#success').show();\n            },\n            'FileUploaded': function(up, file, info) {\n                var progress = new FileProgress(file, 'fsUploadProgress');\n                progress.setComplete(up, info);\n                img_list.push(localStorage.getItem('img_item_3'));\n                localStorage.setItem('img_list_3', img_list);\n            },\n            'Error': function(up, err, errTip) {\n                //$('table').show();\n                var progress = new FileProgress(err.file, 'fsUploadProgress');\n                progress.setError();\n                progress.setStatus(errTip);\n            }\n            // ,\n            // 'Key': function(up, file) {\n            //     var key = \"\";\n            //     // do something with key\n            //     return key\n            // }\n        }\n    });\n\n    uploader3.bind('FileUploaded', function() {\n        console.log('hello man,a file3 is uploaded');\n    });\n});\n"]}