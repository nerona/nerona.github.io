{"version":3,"sources":["mobiscroll.listbase.js"],"names":[],"mappings":"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","file":"mobiscroll.listbase-compiled.js","sourcesContent":["(function ($, undefined) {\r\n    var ms = $.mobiscroll,\r\n        defaults = {\r\n            invalid: [],\r\n            showInput: true,\r\n            inputClass: ''\r\n        };\r\n\r\n    ms.presets.scroller.list = function (inst) {\r\n        var orig = $.extend({}, inst.settings),\r\n            s = $.extend(inst.settings, defaults, orig),\r\n            layout = s.layout || (/top|bottom/.test(s.display) ? 'liquid' : ''),\r\n            isLiquid = layout == 'liquid',\r\n            origReadOnly = s.readonly,\r\n            elm = $(this),\r\n            input,\r\n            prevent,\r\n            id = this.id + '_dummy',\r\n            lvl = 0,\r\n            ilvl = 0,\r\n            timer = {},\r\n            currLevel,\r\n            currWheelVector = [],\r\n            wa = s.wheelArray || createWheelArray(elm),\r\n            labels = generateLabels(lvl),\r\n            fwv = firstWheelVector(wa),\r\n            w = generateWheelsFromVector(fwv, lvl);\r\n\r\n        /**\r\n         * Disables the invalid items on the wheels\r\n         * @param {Object} dw - the jQuery mobiscroll object\r\n         * @param {Number} nrWheels - the number of the current wheels\r\n         * @param {Array} whArray - The wheel array objects containing the wheel tree\r\n         * @param {Array} whVector - the wheel vector containing the current keys\r\n         */\r\n        function setDisabled(dw, nrWheels, whArray, whVector) {\r\n            var j,\r\n                i = 0;\r\n\r\n            while (i < nrWheels) {\r\n                var currWh = $('.dwwl' + i, dw),\r\n                    inv = getInvalidKeys(whVector, i, whArray);\r\n\r\n                for (j = 0; j < inv.length; j++) {\r\n                    $('.dw-li[data-val=\"' + inv[j] + '\"]', currWh).removeClass('dw-v');\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Returns the invalid keys of one wheel as an array\r\n         * @param {Array} whVector - the wheel vector used to search for the wheel in the wheel array\r\n         * @param {Number} index - index of the wheel in the wheel vector, that we are interested in\r\n         * @param {Array} whArray - the wheel array we are searching in\r\n         * @return {Array} - list of invalid keys\r\n         */\r\n        function getInvalidKeys(whVector, index, whArray) {\r\n            var i = 0,\r\n                n,\r\n                whObjA = whArray,\r\n                invalids = [];\r\n\r\n            while (i < index) {\r\n                var ii = whVector[i];\r\n                //whObjA = whObjA[ii].children;\r\n                for (n in whObjA) {\r\n                    if (whObjA[n].key == ii) {\r\n                        whObjA = whObjA[n].children;\r\n                        break;\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n            i = 0;\r\n            while (i < whObjA.length) {\r\n                if (whObjA[i].invalid) {\r\n                    invalids.push(whObjA[i].key);\r\n                }\r\n                i++;\r\n            }\r\n            return invalids;\r\n        }\r\n\r\n        /**\r\n         * Creates a Boolean vector with true values (except one) that can be used as the readonly vector\r\n         * n - the length of the vector\r\n         * i - the index of the value that's going to be false\r\n         */\r\n        function createROVector(n, i) {\r\n            var a = [];\r\n            while (n) {\r\n                a[--n] = true;\r\n            }\r\n            a[i] = false;\r\n            return a;\r\n        }\r\n\r\n        /**\r\n         * Creates a labels vector, from values if they are defined, otherwise from numbers\r\n         * l - the length of the vector\r\n         */\r\n        function generateLabels(l) {\r\n            var a = [],\r\n                i;\r\n            for (i = 0; i < l; i++) {\r\n                a[i] = s.labels && s.labels[i] ? s.labels[i] : i;\r\n            }\r\n            return a;\r\n        }\r\n\r\n        /**\r\n         * Creates the wheel array from the vector provided\r\n         * wv - wheel vector containing the values that should be selected on the wheels\r\n         * l - the length of the wheel array\r\n         */\r\n        function generateWheelsFromVector(wv, l, index) {\r\n            var i = 0,\r\n                j, obj, chInd,\r\n                w = [\r\n                    []\r\n                ],\r\n                wtObjA = wa;\r\n\r\n            if (l) { // if length is defined we need to generate that many wheels (even if they are empty)\r\n                for (j = 0; j < l; j++) {\r\n                    if (isLiquid) {\r\n                        w[0][j] = {};\r\n                    } else {\r\n                        w[j] = [{}];\r\n                    }\r\n                }\r\n            }\r\n            while (i < wv.length) { // we generate the wheels until the length of the wheel vector\r\n                if (isLiquid) {\r\n                    w[0][i] = getWheelFromObjA(wtObjA, labels[i]);\r\n                } else {\r\n                    w[i] = [getWheelFromObjA(wtObjA, labels[i])];\r\n                }\r\n\r\n                j = 0;\r\n                chInd = undefined;\r\n\r\n                while (j < wtObjA.length && chInd === undefined) {\r\n                    if (wtObjA[j].key == wv[i] && ((index !== undefined && i <= index) || index === undefined)) {\r\n                        chInd = j;\r\n                    }\r\n                    j++;\r\n                }\r\n\r\n                if (chInd !== undefined && wtObjA[chInd].children) {\r\n                    i++;\r\n                    wtObjA = wtObjA[chInd].children;\r\n                } else if ((obj = getFirstValidItemObjOrInd(wtObjA)) && obj.children) {\r\n                    i++;\r\n                    wtObjA = obj.children;\r\n                } else {\r\n                    return w;\r\n                }\r\n            }\r\n            return w;\r\n        }\r\n\r\n        /**\r\n         * Returns the first valid Wheel Node Object or its index from a Wheel Node Object Array\r\n         * getInd - if it is true then the return value is going to be the index, otherwise the object itself\r\n         */\r\n        function getFirstValidItemObjOrInd(wtObjA, getInd) {\r\n            if (!wtObjA) {\r\n                return false;\r\n            }\r\n\r\n            var i = 0,\r\n                obj;\r\n\r\n            while (i < wtObjA.length) {\r\n                if (!(obj = wtObjA[i++]).invalid) {\r\n                    return getInd ? i - 1 : obj;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function getWheelFromObjA(objA, lbl) {\r\n            var wheel = {\r\n                    keys: [],\r\n                    values: [],\r\n                    label: lbl\r\n                },\r\n                j = 0;\r\n\r\n            while (j < objA.length) {\r\n                wheel.values.push(objA[j].value);\r\n                wheel.keys.push(objA[j].key);\r\n                j++;\r\n            }\r\n            return wheel;\r\n        }\r\n\r\n        /**\r\n         * Hides the last i number of wheels\r\n         * i - the last number of wheels that has to be hidden\r\n         */\r\n        function hideWheels(dw, i) {\r\n            $('.dwfl', dw).css('display', '').slice(i).hide();\r\n        }\r\n\r\n        /**\r\n         * Generates the first wheel vector from the wheeltree\r\n         * wt - the wheel tree object\r\n         * uses the lvl global variable to determine the length of the vector\r\n         */\r\n        function firstWheelVector(wa) {\r\n            var t = [],\r\n                ndObjA = wa,\r\n                obj,\r\n                ok = true,\r\n                i = 0;\r\n\r\n            while (ok) {\r\n                obj = getFirstValidItemObjOrInd(ndObjA);\r\n                t[i++] = obj.key;\r\n                ok = obj.children;\r\n                if (ok) {\r\n                    ndObjA = ok;\r\n                }\r\n            }\r\n            return t;\r\n        }\r\n\r\n        /**\r\n         * Calculates the level of a wheel vector and the new wheel vector, depending on current wheel vector and the index of the changed wheel\r\n         * wv - current wheel vector\r\n         * index - index of the changed wheel\r\n         */\r\n        function calcLevelOfVector2(wv, index) {\r\n            var t = [],\r\n                ndObjA = wa,\r\n                lvl = 0,\r\n                next = false,\r\n                i,\r\n                childName,\r\n                chInd;\r\n\r\n            if (wv[lvl] !== undefined && lvl <= index) {\r\n                i = 0;\r\n\r\n                childName = wv[lvl];\r\n                chInd = undefined;\r\n\r\n                while (i < ndObjA.length && chInd === undefined) {\r\n                    if (ndObjA[i].key == wv[lvl] && !ndObjA[i].invalid) {\r\n                        chInd = i;\r\n                    }\r\n                    i++;\r\n                }\r\n            } else {\r\n                chInd = getFirstValidItemObjOrInd(ndObjA, true);\r\n                childName = ndObjA[chInd].key;\r\n            }\r\n\r\n            next = chInd !== undefined ? ndObjA[chInd].children : false;\r\n\r\n            t[lvl] = childName;\r\n\r\n            while (next) {\r\n                ndObjA = ndObjA[chInd].children;\r\n                lvl++;\r\n                next = false;\r\n                chInd = undefined;\r\n\r\n                if (wv[lvl] !== undefined && lvl <= index) {\r\n                    i = 0;\r\n\r\n                    childName = wv[lvl];\r\n                    chInd = undefined;\r\n\r\n                    while (i < ndObjA.length && chInd === undefined) {\r\n                        if (ndObjA[i].key == wv[lvl] && !ndObjA[i].invalid) {\r\n                            chInd = i;\r\n                        }\r\n                        i++;\r\n                    }\r\n                } else {\r\n                    chInd = getFirstValidItemObjOrInd(ndObjA, true);\r\n                    chInd = chInd === false ? undefined : chInd;\r\n                    childName = ndObjA[chInd].key;\r\n                }\r\n                next = chInd !== undefined && getFirstValidItemObjOrInd(ndObjA[chInd].children) ? ndObjA[chInd].children : false;\r\n                t[lvl] = childName;\r\n            }\r\n            return {\r\n                lvl: lvl + 1,\r\n                nVector: t\r\n            }; // return the calculated level and the wheel vector as an object\r\n        }\r\n\r\n        function createWheelArray(ul) {\r\n            var wheelArray = [];\r\n\r\n            lvl = lvl > ilvl++ ? lvl : ilvl;\r\n\r\n            ul.children('li').each(function (index) {\r\n                var that = $(this),\r\n                    c = that.clone();\r\n\r\n                c.children('ul,ol').remove();\r\n\r\n                var v = inst._processMarkup ? inst._processMarkup(c) : c.html().replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''),\r\n                    inv = that.attr('data-invalid') ? true : false,\r\n                    wheelObj = {\r\n                        key: that.attr('data-val') === undefined || that.attr('data-val') === null ? index : that.attr('data-val'),\r\n                        value: v,\r\n                        invalid: inv,\r\n                        children: null\r\n                    },\r\n                    nest = that.children('ul,ol');\r\n\r\n                if (nest.length) {\r\n                    wheelObj.children = createWheelArray(nest);\r\n                }\r\n\r\n                wheelArray.push(wheelObj);\r\n            });\r\n\r\n            ilvl--;\r\n            return wheelArray;\r\n        }\r\n\r\n        $('#' + id).remove(); // Remove input if exists\r\n\r\n        if (s.showInput) {\r\n            input = $('<input type=\"text\" id=\"' + id + '\" value=\"\" class=\"' + s.inputClass + '\" placeholder=\"' + (s.placeholder || '') + '\" readonly />').insertBefore(elm);\r\n            s.anchor = input; // give the core the input element for the bubble positioning\r\n            inst.attachShow(input);\r\n        }\r\n\r\n        if (!s.wheelArray) {\r\n            elm.hide().closest('.ui-field-contain').trigger('create');\r\n        }\r\n\r\n        return {\r\n            width: 50,\r\n            wheels: w,\r\n            layout: layout,\r\n            headerText: false,\r\n            formatValue: function (d) {\r\n                if (currLevel === undefined) {\r\n                    currLevel = calcLevelOfVector2(d, d.length).lvl;\r\n                }\r\n                return d.slice(0, currLevel).join(' ');\r\n            },\r\n            parseValue: function (value) {\r\n                return value ? (value + '').split(' ') : (s.defaultValue || fwv).slice(0);\r\n            },\r\n            onBeforeShow: function () {\r\n                var t = inst.getArrayVal(true);\r\n                currWheelVector = t.slice(0);\r\n                s.wheels = generateWheelsFromVector(t, lvl, lvl);\r\n                prevent = true;\r\n            },\r\n            onValueFill: function (v) {\r\n                currLevel = undefined;\r\n                if (input) {\r\n                    input.val(v);\r\n                }\r\n            },\r\n            onShow: function (dw) {\r\n                $('.dwwl', dw).on('mousedown touchstart', function () {\r\n                    clearTimeout(timer[$('.dwwl', dw).index(this)]);\r\n                });\r\n            },\r\n            onDestroy: function () {\r\n                if (input) {\r\n                    input.remove();\r\n                }\r\n                elm.show();\r\n            },\r\n            validate: function (dw, index, time) {\r\n                var args = [],\r\n                    t = inst.getArrayVal(true),\r\n                    i = (index || 0) + 1,\r\n                    j,\r\n                    o;\r\n\r\n                if ((index !== undefined && currWheelVector[index] != t[index]) || (index === undefined && !prevent)) {\r\n                    s.wheels = generateWheelsFromVector(t, null, index);\r\n                    o = calcLevelOfVector2(t, index === undefined ? t.length : index);\r\n                    currLevel = o.lvl;\r\n\r\n                    for (j = 0; j < t.length; j++) {\r\n                        t[j] = o.nVector[j] || 0;\r\n                    }\r\n\r\n                    while (i < o.lvl) {\r\n                        args.push(i++);\r\n                    }\r\n\r\n                    if (args.length) {\r\n                        s.readonly = createROVector(lvl, index);\r\n                        clearTimeout(timer[index]);\r\n                        timer[index] = setTimeout(function () {\r\n                            prevent = true;\r\n                            hideWheels(dw, o.lvl);\r\n                            currWheelVector = t.slice(0);\r\n                            inst.changeWheel(args, index === undefined ? time : 0, index !== undefined);\r\n                            s.readonly = origReadOnly;\r\n                        }, index === undefined ? 0 : time * 1000);\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    o = calcLevelOfVector2(t, t.length);\r\n                    currLevel = o.lvl;\r\n                }\r\n\r\n                currWheelVector = t.slice(0);\r\n                setDisabled(dw, o.lvl, wa, t);\r\n                hideWheels(dw, o.lvl);\r\n\r\n                prevent = false;\r\n            }\r\n        };\r\n    };\r\n})(jQuery);\r\n"]}