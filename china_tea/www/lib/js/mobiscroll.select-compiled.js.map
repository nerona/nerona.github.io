{"version":3,"sources":["mobiscroll.select.js"],"names":[],"mappings":"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","file":"mobiscroll.select-compiled.js","sourcesContent":["(function ($, undefined) {\r\n    var ms = $.mobiscroll,\r\n        util = ms.util,\r\n        isString = util.isString,\r\n        defaults = {\r\n            batch: 40,\r\n            inputClass: '',\r\n            invalid: [],\r\n            rtl: false,\r\n            showInput: true,\r\n            groupLabel: 'Groups',\r\n            checkIcon: 'checkmark',\r\n            dataText: 'text',\r\n            dataValue: 'value',\r\n            dataGroup: 'group',\r\n            dataDisabled: 'disabled'\r\n        };\r\n\r\n    ms.presetShort('select');\r\n\r\n    ms.presets.scroller.select = function (inst) {\r\n        var change,\r\n            defaultValue,\r\n            group,\r\n            groupArray,\r\n            groupChanged,\r\n            groupTap,\r\n            groupWheelIdx,\r\n            i,\r\n            input,\r\n            optionArray,\r\n            optionWheelIdx,\r\n            option,\r\n            origValues,\r\n            prevGroup,\r\n            timer,\r\n            batchChanged = {},\r\n            batchStart = {},\r\n            batchEnd = {},\r\n            tempBatchStart = {},\r\n            tempBatchEnd = {},\r\n            orig = $.extend({}, inst.settings),\r\n            s = $.extend(inst.settings, defaults, orig),\r\n            batch = s.batch,\r\n            layout = s.layout || (/top|bottom/.test(s.display) ? 'liquid' : ''),\r\n            isLiquid = layout == 'liquid',\r\n            elm = $(this),\r\n            multiple = s.multiple || elm.prop('multiple'),\r\n            maxSelect = util.isNumeric(s.multiple) ? s.multiple : Infinity,\r\n            id = this.id + '_dummy',\r\n            lbl = $('label[for=\"' + this.id + '\"]').attr('for', id),\r\n            label = s.label !== undefined ? s.label : (lbl.length ? lbl.text() : elm.attr('name')),\r\n            selectedClass = 'dw-msel mbsc-ic mbsc-ic-' + s.checkIcon,\r\n            origReadOnly = s.readonly,\r\n            data = s.data,\r\n            hasData = !!data,\r\n            hasGroups = hasData ? !!s.group : $('optgroup', elm).length,\r\n            groupSetup = s.group,\r\n            groupWheel = hasGroups && groupSetup && groupSetup.groupWheel !== false,\r\n            groupSep = hasGroups && groupSetup && groupWheel && groupSetup.clustered === true,\r\n            groupHdr = hasGroups && (!groupSetup || (groupSetup.header !== false && !groupSep)),\r\n            values = elm.val() || [],\r\n            invalid = [],\r\n            selectedValues = {},\r\n            options = {},\r\n            groups = {};\r\n\r\n        function prepareData() {\r\n            var gr,\r\n                lbl,\r\n                opt,\r\n                txt,\r\n                val,\r\n                l = 0,\r\n                c = 0,\r\n                groupIndexes = {};\r\n\r\n            options = {};\r\n            groups = {};\r\n\r\n            optionArray = [];\r\n            groupArray = [];\r\n\r\n            // Reset invalids\r\n            invalid.length = 0;\r\n\r\n            if (hasData) {\r\n                $.each(s.data, function (i, v) {\r\n                    txt = v[s.dataText];\r\n                    val = v[s.dataValue];\r\n                    lbl = v[s.dataGroup];\r\n                    opt = {\r\n                        value: val,\r\n                        text: txt,\r\n                        index: i\r\n                    };\r\n                    options[val] = opt;\r\n                    optionArray.push(opt);\r\n\r\n                    if (hasGroups) {\r\n                        if (groupIndexes[lbl] === undefined) {\r\n                            gr = {\r\n                                text: lbl,\r\n                                value: c,\r\n                                options: [],\r\n                                index: c\r\n                            };\r\n                            groups[c] = gr;\r\n                            groupIndexes[lbl] = c;\r\n                            groupArray.push(gr);\r\n                            c++;\r\n                        } else {\r\n                            gr = groups[groupIndexes[lbl]];\r\n                        }\r\n                        if (groupSep) {\r\n                            opt.index = gr.options.length;\r\n                        }\r\n                        opt.group = groupIndexes[lbl];\r\n                        gr.options.push(opt);\r\n                    }\r\n                    if (v[s.dataDisabled]) {\r\n                        invalid.push(val);\r\n                    }\r\n                });\r\n            } else {\r\n                if (hasGroups) {\r\n                    $('optgroup', elm).each(function (i) {\r\n                        groups[i] = {\r\n                            text: this.label,\r\n                            value: i,\r\n                            options: [],\r\n                            index: i\r\n                        };\r\n                        groupArray.push(groups[i]);\r\n                        $('option', this).each(function (j) {\r\n                            opt = {\r\n                                value: this.value,\r\n                                text: this.text,\r\n                                index: groupSep ? j : l++,\r\n                                group: i\r\n                            };\r\n                            options[this.value] = opt;\r\n                            optionArray.push(opt);\r\n                            groups[i].options.push(opt);\r\n                            if (this.disabled) {\r\n                                invalid.push(this.value);\r\n                            }\r\n                        });\r\n                    });\r\n                } else {\r\n                    $('option', elm).each(function (i) {\r\n                        opt = {\r\n                            value: this.value,\r\n                            text: this.text,\r\n                            index: i\r\n                        };\r\n                        options[this.value] = opt;\r\n                        optionArray.push(opt);\r\n                        if (this.disabled) {\r\n                            invalid.push(this.value);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (optionArray.length) {\r\n                defaultValue = optionArray[0].value;\r\n            }\r\n\r\n            if (groupHdr) {\r\n                optionArray = [];\r\n                l = 0;\r\n                $.each(groups, function (i, gr) {\r\n                    val = '__group' + i;\r\n                    opt = {\r\n                        text: gr.text,\r\n                        value: val,\r\n                        group: i,\r\n                        index: l++\r\n                    };\r\n                    options[val] = opt;\r\n                    optionArray.push(opt);\r\n                    invalid.push(opt.value);\r\n                    $.each(gr.options, function (j, opt) {\r\n                        opt.index = l++;\r\n                        optionArray.push(opt);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        function genValues(w, data, dataMap, value, index, multiple, label) {\r\n            var i,\r\n                wheel,\r\n                keys = [],\r\n                values = [],\r\n                selectedIndex = dataMap[value] !== undefined ? dataMap[value].index : 0,\r\n                start = Math.max(0, selectedIndex - batch),\r\n                end = Math.min(data.length - 1, start + batch * 2);\r\n\r\n            if (batchStart[index] !== start || batchEnd[index] !== end) {\r\n                for (i = start; i <= end; i++) {\r\n                    values.push(data[i].text);\r\n                    keys.push(data[i].value);\r\n                }\r\n                batchChanged[index] = true;\r\n                tempBatchStart[index] = start;\r\n                tempBatchEnd[index] = end;\r\n\r\n                wheel = {\r\n                    multiple: multiple,\r\n                    values: values,\r\n                    keys: keys,\r\n                    label: label\r\n                };\r\n\r\n                if (isLiquid) {\r\n                    w[0][index] = wheel;\r\n                } else {\r\n                    w[index] = [wheel];\r\n                }\r\n            } else {\r\n                batchChanged[index] = false;\r\n            }\r\n        }\r\n\r\n        function genGroupWheel(w) {\r\n            genValues(w, groupArray, groups, group, groupWheelIdx, false, s.groupLabel);\r\n        }\r\n\r\n        function genOptWheel(w) {\r\n            genValues(w, groupSep ? groups[group].options : optionArray, options, option, optionWheelIdx, multiple, label);\r\n        }\r\n\r\n        function genWheels() {\r\n            var w = [\r\n                []\r\n            ];\r\n\r\n            if (groupWheel) {\r\n                genGroupWheel(w);\r\n            }\r\n\r\n            genOptWheel(w);\r\n\r\n            return w;\r\n        }\r\n\r\n        function getOption(v) {\r\n            if (multiple) {\r\n                if (v && isString(v)) {\r\n                    v = v.split(',');\r\n                }\r\n                if ($.isArray(v)) {\r\n                    v = v[0];\r\n                }\r\n            }\r\n\r\n            option = v === undefined || v === null || v === '' || !options[v] ? defaultValue : v;\r\n\r\n            if (groupWheel) {\r\n                group = options[option] ? options[option].group : null;\r\n                prevGroup = group;\r\n            }\r\n        }\r\n\r\n        function getVal(temp, group) {\r\n            var val = temp ? inst._tempWheelArray : (inst._hasValue ? inst._wheelArray : null);\r\n            return val ? (s.group && group ? val : val[optionWheelIdx]) : null;\r\n        }\r\n\r\n        function onFill() {\r\n            var txt,\r\n                val,\r\n                sel = [],\r\n                i = 0;\r\n\r\n            if (multiple) {\r\n                val = [];\r\n\r\n                for (i in selectedValues) {\r\n                    sel.push(options[i] ? options[i].text : '');\r\n                    val.push(i);\r\n                }\r\n\r\n                txt = sel.join(', ');\r\n            } else {\r\n                val = option;\r\n                txt = options[option] ? options[option].text : '';\r\n            }\r\n\r\n            inst._tempValue = val;\r\n\r\n            input.val(txt);\r\n            elm.val(val);\r\n        }\r\n\r\n        function onTap(li) {\r\n            var val = li.attr('data-val'),\r\n                selected = li.hasClass('dw-msel');\r\n\r\n            if (multiple && li.closest('.dwwl').hasClass('dwwms')) {\r\n                if (li.hasClass('dw-v')) {\r\n                    if (selected) {\r\n                        li.removeClass(selectedClass).removeAttr('aria-selected');\r\n                        delete selectedValues[val];\r\n                    } else if (util.objectToArray(selectedValues).length < maxSelect) {\r\n                        li.addClass(selectedClass).attr('aria-selected', 'true');\r\n                        selectedValues[val] = val;\r\n                    }\r\n                }\r\n                return false;\r\n            } else if (li.hasClass('dw-w-gr')) {\r\n                groupTap = li.attr('data-val');\r\n            }\r\n        }\r\n\r\n        if (!s.invalid.length) {\r\n            s.invalid = invalid;\r\n        }\r\n\r\n        if (groupWheel) {\r\n            groupWheelIdx = 0;\r\n            optionWheelIdx = 1;\r\n        } else {\r\n            groupWheelIdx = -1;\r\n            optionWheelIdx = 0;\r\n        }\r\n\r\n        if (multiple) {\r\n            elm.prop('multiple', true);\r\n\r\n            if (values && isString(values)) {\r\n                values = values.split(',');\r\n            }\r\n            for (i = 0; i < values.length; i++) {\r\n                selectedValues[values[i]] = values[i];\r\n            }\r\n        }\r\n\r\n        prepareData();\r\n\r\n        getOption(elm.val());\r\n\r\n        $('#' + id).remove();\r\n\r\n        if (elm.next().is('input.mbsc-control')) {\r\n            input = elm.off('.mbsc-form').next().removeAttr('tabindex');\r\n        } else {\r\n            input = $('<input type=\"text\" id=\"' + id + '\" class=\"mbsc-control mbsc-control-ev ' + s.inputClass + '\" readonly />');\r\n\r\n            if (s.showInput) {\r\n                input.insertBefore(elm);\r\n            }\r\n        }\r\n\r\n        inst.attachShow(input.attr('placeholder', s.placeholder || ''));\r\n\r\n        elm.addClass('dw-hsel').attr('tabindex', -1).closest('.ui-field-contain').trigger('create');\r\n\r\n        onFill();\r\n\r\n        // Extended methods\r\n        // ---\r\n\r\n        inst.setVal = function (val, fill, change, temp, time) {\r\n            if (multiple) {\r\n                if (val && isString(val)) {\r\n                    val = val.split(',');\r\n                }\r\n                selectedValues = util.arrayToObject(val);\r\n                val = val ? val[0] : null;\r\n            }\r\n            inst._setVal(val, fill, change, temp, time);\r\n        };\r\n\r\n        inst.getVal = function (temp, group) {\r\n            if (multiple) {\r\n                return util.objectToArray(selectedValues);\r\n            }\r\n            return getVal(temp, group);\r\n        };\r\n\r\n        inst.refresh = function () {\r\n            prepareData();\r\n\r\n            batchStart = {};\r\n            batchEnd = {};\r\n\r\n            s.wheels = genWheels();\r\n\r\n            batchStart[groupWheelIdx] = tempBatchStart[groupWheelIdx];\r\n            batchEnd[groupWheelIdx] = tempBatchEnd[groupWheelIdx];\r\n            batchStart[optionWheelIdx] = tempBatchStart[optionWheelIdx];\r\n            batchEnd[optionWheelIdx] = tempBatchEnd[optionWheelIdx];\r\n\r\n            // Prevent wheel generation on initial validation\r\n            change = true;\r\n\r\n            getOption(option);\r\n\r\n            inst._tempWheelArray = groupWheel ? [group, option] : [option];\r\n\r\n            if (inst._isVisible) {\r\n                inst.changeWheel(groupWheel ? [groupWheelIdx, optionWheelIdx] : [optionWheelIdx]);\r\n            }\r\n        };\r\n\r\n        // @deprecated since 2.14.0, backward compatibility code\r\n        // ---\r\n        inst.getValues = inst.getVal;\r\n\r\n        inst.getValue = getVal;\r\n        // ---\r\n\r\n        // ---\r\n\r\n        return {\r\n            width: 50,\r\n            layout: layout,\r\n            headerText: false,\r\n            anchor: input,\r\n            confirmOnTap: groupWheel ? [false, true] : true,\r\n            formatValue: function (d) {\r\n                var i,\r\n                    opt,\r\n                    sel = [];\r\n\r\n                if (multiple) {\r\n                    for (i in selectedValues) {\r\n                        sel.push(options[i] ? options[i].text : '');\r\n                    }\r\n                    return sel.join(', ');\r\n                }\r\n\r\n                opt = d[optionWheelIdx];\r\n\r\n                return options[opt] ? options[opt].text : '';\r\n            },\r\n            parseValue: function (val) {\r\n                getOption(val === undefined ? elm.val() : val);\r\n                return groupWheel ? [group, option] : [option];\r\n            },\r\n            onValueTap: onTap,\r\n            onValueFill: onFill,\r\n            onBeforeShow: function () {\r\n                if (multiple && s.counter) {\r\n                    s.headerText = function () {\r\n                        var length = 0;\r\n                        $.each(selectedValues, function () {\r\n                            length++;\r\n                        });\r\n                        return (length > 1 ? s.selectedPluralText || s.selectedText : s.selectedText).replace(/{count}/, length);\r\n                    };\r\n                }\r\n\r\n                getOption(elm.val());\r\n\r\n\r\n                if (groupWheel) {\r\n                    inst._tempWheelArray = [group, option];\r\n                }\r\n\r\n                inst.refresh();\r\n            },\r\n            onMarkupReady: function (dw) {\r\n                dw.addClass('dw-select');\r\n\r\n                $('.dwwl' + groupWheelIdx, dw).on('mousedown touchstart', function () {\r\n                    clearTimeout(timer);\r\n                });\r\n\r\n                $('.dwwl' + optionWheelIdx, dw).on('mousedown touchstart', function () {\r\n                    if (!groupChanged) {\r\n                        clearTimeout(timer);\r\n                    }\r\n                });\r\n\r\n                if (groupHdr) {\r\n                    $('.dwwl' + optionWheelIdx, dw).addClass('dw-select-gr');\r\n                }\r\n\r\n                if (multiple) {\r\n                    dw.addClass('dwms');\r\n\r\n                    $('.dwwl', dw).on('keydown', function (e) {\r\n                        if (e.keyCode == 32) { // Space\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            onTap($('.dw-sel', this));\r\n                        }\r\n                    }).eq(optionWheelIdx).attr('aria-multiselectable', 'true');\r\n\r\n                    origValues = $.extend({}, selectedValues);\r\n                }\r\n            },\r\n            validate: function (dw, i, time, dir) {\r\n                var j,\r\n                    v,\r\n                    changes = [],\r\n                    temp = inst.getArrayVal(true),\r\n                    tempGr = temp[groupWheelIdx],\r\n                    tempOpt = temp[optionWheelIdx],\r\n                    t1 = $('.dw-ul', dw).eq(groupWheelIdx),\r\n                    t2 = $('.dw-ul', dw).eq(optionWheelIdx);\r\n\r\n                if (batchStart[groupWheelIdx] > 1) {\r\n                    $('.dw-li', t1).slice(0, 2).removeClass('dw-v').addClass('dw-fv');\r\n                }\r\n\r\n                if (batchEnd[groupWheelIdx] < groupArray.length - 2) {\r\n                    $('.dw-li', t1).slice(-2).removeClass('dw-v').addClass('dw-fv');\r\n                }\r\n\r\n                if (batchStart[optionWheelIdx] > 1) {\r\n                    $('.dw-li', t2).slice(0, 2).removeClass('dw-v').addClass('dw-fv');\r\n                }\r\n\r\n                if (batchEnd[optionWheelIdx] < (groupSep ? groups[tempGr].options : optionArray).length - 2) {\r\n                    $('.dw-li', t2).slice(-2).removeClass('dw-v').addClass('dw-fv');\r\n                }\r\n\r\n                if (!change) {\r\n                    option = tempOpt;\r\n\r\n                    if (groupWheel) {\r\n                        group = options[option].group;\r\n\r\n                        // If group changed, load group options\r\n                        if (i === undefined || i === groupWheelIdx) {\r\n                            group = +temp[groupWheelIdx];\r\n                            groupChanged = false;\r\n                            if (group !== prevGroup) {\r\n                                option = groups[group].options[0].value;\r\n                                batchStart[optionWheelIdx] = null;\r\n                                batchEnd[optionWheelIdx] = null;\r\n                                groupChanged = true;\r\n                                s.readonly = [false, true];\r\n                            } else {\r\n                                s.readonly = origReadOnly;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Adjust value to the first group option if group header was selected\r\n                    if (hasGroups && (/__group/.test(option) || groupTap)) {\r\n                        option = groups[options[groupTap || option].group].options[0].value;\r\n                        tempOpt = option;\r\n                        groupTap = false;\r\n                    }\r\n\r\n                    // Update values if changed\r\n                    // Don't set the new option yet (if group changed), because it's not on the wheel yet\r\n                    inst._tempWheelArray = groupWheel ? [tempGr, tempOpt] : [tempOpt];\r\n\r\n                    // Generate new wheel batches\r\n                    if (groupWheel) {\r\n                        genGroupWheel(s.wheels);\r\n\r\n                        if (batchChanged[groupWheelIdx]) {\r\n                            changes.push(groupWheelIdx);\r\n                        }\r\n                    }\r\n\r\n                    genOptWheel(s.wheels);\r\n\r\n                    if (batchChanged[optionWheelIdx]) {\r\n                        changes.push(optionWheelIdx);\r\n                    }\r\n\r\n                    clearTimeout(timer);\r\n                    timer = setTimeout(function () {\r\n                        if (changes.length) {\r\n                            change = true;\r\n                            groupChanged = false;\r\n                            prevGroup = group;\r\n\r\n                            // Save current batch boundaries\r\n                            batchStart[groupWheelIdx] = tempBatchStart[groupWheelIdx];\r\n                            batchEnd[groupWheelIdx] = tempBatchEnd[groupWheelIdx];\r\n                            batchStart[optionWheelIdx] = tempBatchStart[optionWheelIdx];\r\n                            batchEnd[optionWheelIdx] = tempBatchEnd[optionWheelIdx];\r\n\r\n                            // Set the updated values\r\n                            inst._tempWheelArray = groupWheel ? [tempGr, option] : [option];\r\n\r\n                            // Change the wheels\r\n                            inst.changeWheel(changes, 0, i !== undefined);\r\n                        }\r\n\r\n                        if (groupWheel) {\r\n                            if (i === optionWheelIdx) {\r\n                                inst.scroll(t1, groupWheelIdx, inst.getValidCell(group, t1, dir, false, true).v, 0.1);\r\n                            }\r\n                            inst._tempWheelArray[groupWheelIdx] = group;\r\n                        }\r\n\r\n                        // Restore readonly status\r\n                        s.readonly = origReadOnly;\r\n                    }, i === undefined ? 100 : time * 1000);\r\n\r\n                    if (changes.length) {\r\n                        return groupChanged ? false : true;\r\n                    }\r\n                }\r\n\r\n                // Add selected styling to selected elements in case of multiselect\r\n                if (i === undefined && multiple) {\r\n                    v = selectedValues;\r\n                    j = 0;\r\n\r\n                    $('.dwwl' + optionWheelIdx + ' .dw-li', dw).removeClass(selectedClass).removeAttr('aria-selected');\r\n\r\n                    for (j in v) {\r\n                        $('.dwwl' + optionWheelIdx + ' .dw-li[data-val=\"' + v[j] + '\"]', dw).addClass(selectedClass).attr('aria-selected', 'true');\r\n                    }\r\n                }\r\n\r\n                // Add styling to group headers\r\n                if (groupHdr) {\r\n                    $('.dw-li[data-val^=\"__group\"]', dw).addClass('dw-w-gr');\r\n                }\r\n\r\n                // Disable invalid options\r\n                $.each(s.invalid, function (i, v) {\r\n                    $('.dw-li[data-val=\"' + v + '\"]', t2).removeClass('dw-v dw-fv');\r\n                });\r\n\r\n                change = false;\r\n            },\r\n            onValidated: function () {\r\n                option = inst._tempWheelArray[optionWheelIdx];\r\n            },\r\n            onClear: function (dw) {\r\n                selectedValues = {};\r\n                input.val('');\r\n                $('.dwwl' + optionWheelIdx + ' .dw-li', dw).removeClass(selectedClass).removeAttr('aria-selected');\r\n            },\r\n            onCancel: function () {\r\n                if (!inst.live && multiple) {\r\n                    selectedValues = $.extend({}, origValues);\r\n                }\r\n            },\r\n            onDestroy: function () {\r\n                if (!input.hasClass('mbsc-control')) {\r\n                    input.remove();\r\n                }\r\n                elm.removeClass('dw-hsel').removeAttr('tabindex');\r\n            }\r\n        };\r\n    };\r\n})(jQuery);\r\n"]}