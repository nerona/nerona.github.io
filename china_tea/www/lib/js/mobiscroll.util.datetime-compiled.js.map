{"version":3,"sources":["mobiscroll.util.datetime.js"],"names":[],"mappings":"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","file":"mobiscroll.util.datetime-compiled.js","sourcesContent":["(function ($, undefined) {\r\n    var ms = $.mobiscroll;\r\n\r\n    ms.datetime = {\r\n        defaults: {\r\n            shortYearCutoff: '+10',\r\n            monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n            monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n            dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n            dayNamesMin: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n            amText: 'am',\r\n            pmText: 'pm',\r\n            getYear: function (d) { return d.getFullYear(); },\r\n            getMonth: function (d) { return d.getMonth(); },\r\n            getDay: function (d) { return d.getDate(); },\r\n            getDate: function (y, m, d, h, i, s, u) { return new Date(y, m, d, h || 0, i || 0, s || 0, u || 0); },\r\n            getMaxDayOfMonth: function (y, m) { return 32 - new Date(y, m, 32).getDate(); },\r\n            getWeekNumber: function (d) {\r\n                // Copy date so don't modify original\r\n                d = new Date(d);\r\n                d.setHours(0, 0, 0);\r\n                // Set to nearest Thursday: current date + 4 - current day number\r\n                // Make Sunday's day number 7\r\n                d.setDate(d.getDate() + 4 - (d.getDay() || 7));\r\n                // Get first day of year\r\n                var yearStart = new Date(d.getFullYear(), 0, 1);\r\n                // Calculate full weeks to nearest Thursday\r\n                return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\r\n            }\r\n        },\r\n        /**\r\n        * Format a date into a string value with a specified format.\r\n        * @param {String} format Output format.\r\n        * @param {Date} date Date to format.\r\n        * @param {Object} [settings={}] Settings.\r\n        * @return {String} Returns the formatted date string.\r\n        */\r\n        formatDate: function (format, date, settings) {\r\n            if (!date) {\r\n                return null;\r\n            }\r\n            var s = $.extend({}, ms.datetime.defaults, settings),\r\n                look = function (m) { // Check whether a format character is doubled\r\n                    var n = 0;\r\n                    while (i + 1 < format.length && format.charAt(i + 1) == m) {\r\n                        n++;\r\n                        i++;\r\n                    }\r\n                    return n;\r\n                },\r\n                f1 = function (m, val, len) { // Format a number, with leading zero if necessary\r\n                    var n = '' + val;\r\n                    if (look(m)) {\r\n                        while (n.length < len) {\r\n                            n = '0' + n;\r\n                        }\r\n                    }\r\n                    return n;\r\n                },\r\n                f2 = function (m, val, s, l) { // Format a name, short or long as requested\r\n                    return (look(m) ? l[val] : s[val]);\r\n                },\r\n                i,\r\n                year,\r\n                output = '',\r\n                literal = false;\r\n\r\n            for (i = 0; i < format.length; i++) {\r\n                if (literal) {\r\n                    if (format.charAt(i) == \"'\" && !look(\"'\")) {\r\n                        literal = false;\r\n                    } else {\r\n                        output += format.charAt(i);\r\n                    }\r\n                } else {\r\n                    switch (format.charAt(i)) {\r\n                        case 'd':\r\n                            output += f1('d', s.getDay(date), 2);\r\n                            break;\r\n                        case 'D':\r\n                            output += f2('D', date.getDay(), s.dayNamesShort, s.dayNames);\r\n                            break;\r\n                        case 'o':\r\n                            output += f1('o', (date.getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000, 3);\r\n                            break;\r\n                        case 'm':\r\n                            output += f1('m', s.getMonth(date) + 1, 2);\r\n                            break;\r\n                        case 'M':\r\n                            output += f2('M', s.getMonth(date), s.monthNamesShort, s.monthNames);\r\n                            break;\r\n                        case 'y':\r\n                            year = s.getYear(date);\r\n                            output += (look('y') ? year : (year % 100 < 10 ? '0' : '') + year % 100);\r\n                            //output += (look('y') ? date.getFullYear() : (date.getYear() % 100 < 10 ? '0' : '') + date.getYear() % 100);\r\n                            break;\r\n                        case 'h':\r\n                            var h = date.getHours();\r\n                            output += f1('h', (h > 12 ? (h - 12) : (h === 0 ? 12 : h)), 2);\r\n                            break;\r\n                        case 'H':\r\n                            output += f1('H', date.getHours(), 2);\r\n                            break;\r\n                        case 'i':\r\n                            output += f1('i', date.getMinutes(), 2);\r\n                            break;\r\n                        case 's':\r\n                            output += f1('s', date.getSeconds(), 2);\r\n                            break;\r\n                        case 'a':\r\n                            output += date.getHours() > 11 ? s.pmText : s.amText;\r\n                            break;\r\n                        case 'A':\r\n                            output += date.getHours() > 11 ? s.pmText.toUpperCase() : s.amText.toUpperCase();\r\n                            break;\r\n                        case \"'\":\r\n                            if (look(\"'\")) {\r\n                                output += \"'\";\r\n                            } else {\r\n                                literal = true;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            output += format.charAt(i);\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        },\r\n        /**\r\n        * Extract a date from a string value with a specified format.\r\n        * @param {String} format Input format.\r\n        * @param {String} value String to parse.\r\n        * @param {Object} [settings={}] Settings.\r\n        * @return {Date} Returns the extracted date.\r\n        */\r\n        parseDate: function (format, value, settings) {\r\n            var s = $.extend({}, ms.datetime.defaults, settings),\r\n                def = s.defaultValue || new Date();\r\n\r\n            if (!format || !value) {\r\n                return def;\r\n            }\r\n\r\n            // If already a date object\r\n            if (value.getTime) {\r\n                return value;\r\n            }\r\n\r\n            value = (typeof value == 'object' ? value.toString() : value + '');\r\n\r\n            var shortYearCutoff = s.shortYearCutoff,\r\n                year = s.getYear(def),\r\n                month = s.getMonth(def) + 1,\r\n                day = s.getDay(def),\r\n                doy = -1,\r\n                hours = def.getHours(),\r\n                minutes = def.getMinutes(),\r\n                seconds = 0, //def.getSeconds(),\r\n                ampm = -1,\r\n                literal = false, // Check whether a format character is doubled\r\n                lookAhead = function (match) {\r\n                    var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);\r\n                    if (matches) {\r\n                        iFormat++;\r\n                    }\r\n                    return matches;\r\n                },\r\n                getNumber = function (match) { // Extract a number from the string value\r\n                    lookAhead(match);\r\n                    var size = (match == '@' ? 14 : (match == '!' ? 20 : (match == 'y' ? 4 : (match == 'o' ? 3 : 2)))),\r\n                        digits = new RegExp('^\\\\d{1,' + size + '}'),\r\n                        num = value.substr(iValue).match(digits);\r\n\r\n                    if (!num) {\r\n                        return 0;\r\n                    }\r\n                    iValue += num[0].length;\r\n                    return parseInt(num[0], 10);\r\n                },\r\n                getName = function (match, s, l) { // Extract a name from the string value and convert to an index\r\n                    var names = (lookAhead(match) ? l : s),\r\n                        i;\r\n\r\n                    for (i = 0; i < names.length; i++) {\r\n                        if (value.substr(iValue, names[i].length).toLowerCase() == names[i].toLowerCase()) {\r\n                            iValue += names[i].length;\r\n                            return i + 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                },\r\n                checkLiteral = function () {\r\n                    iValue++;\r\n                },\r\n                iValue = 0,\r\n                iFormat;\r\n\r\n            for (iFormat = 0; iFormat < format.length; iFormat++) {\r\n                if (literal) {\r\n                    if (format.charAt(iFormat) == \"'\" && !lookAhead(\"'\")) {\r\n                        literal = false;\r\n                    } else {\r\n                        checkLiteral();\r\n                    }\r\n                } else {\r\n                    switch (format.charAt(iFormat)) {\r\n                        case 'd':\r\n                            day = getNumber('d');\r\n                            break;\r\n                        case 'D':\r\n                            getName('D', s.dayNamesShort, s.dayNames);\r\n                            break;\r\n                        case 'o':\r\n                            doy = getNumber('o');\r\n                            break;\r\n                        case 'm':\r\n                            month = getNumber('m');\r\n                            break;\r\n                        case 'M':\r\n                            month = getName('M', s.monthNamesShort, s.monthNames);\r\n                            break;\r\n                        case 'y':\r\n                            year = getNumber('y');\r\n                            break;\r\n                        case 'H':\r\n                            hours = getNumber('H');\r\n                            break;\r\n                        case 'h':\r\n                            hours = getNumber('h');\r\n                            break;\r\n                        case 'i':\r\n                            minutes = getNumber('i');\r\n                            break;\r\n                        case 's':\r\n                            seconds = getNumber('s');\r\n                            break;\r\n                        case 'a':\r\n                            ampm = getName('a', [s.amText, s.pmText], [s.amText, s.pmText]) - 1;\r\n                            break;\r\n                        case 'A':\r\n                            ampm = getName('A', [s.amText, s.pmText], [s.amText, s.pmText]) - 1;\r\n                            break;\r\n                        case \"'\":\r\n                            if (lookAhead(\"'\")) {\r\n                                checkLiteral();\r\n                            } else {\r\n                                literal = true;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            checkLiteral();\r\n                    }\r\n                }\r\n            }\r\n            if (year < 100) {\r\n                year += new Date().getFullYear() - new Date().getFullYear() % 100 +\r\n                    (year <= (typeof shortYearCutoff != 'string' ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10)) ? 0 : -100);\r\n            }\r\n            if (doy > -1) {\r\n                month = 1;\r\n                day = doy;\r\n                do {\r\n                    var dim = 32 - new Date(year, month - 1, 32).getDate();\r\n                    if (day <= dim) {\r\n                        break;\r\n                    }\r\n                    month++;\r\n                    day -= dim;\r\n                } while (true);\r\n            }\r\n            hours = (ampm == -1) ? hours : ((ampm && hours < 12) ? (hours + 12) : (!ampm && hours == 12 ? 0 : hours));\r\n\r\n            var date = s.getDate(year, month - 1, day, hours, minutes, seconds);\r\n\r\n            if (s.getYear(date) != year || s.getMonth(date) + 1 != month || s.getDay(date) != day) {\r\n                return def; // Invalid date\r\n            }\r\n\r\n            return date;\r\n        }\r\n    };\r\n\r\n    // @deprecated since 2.11.0, backward compatibility code\r\n    // ---\r\n    ms.formatDate = ms.datetime.formatDate;\r\n    ms.parseDate = ms.datetime.parseDate;\r\n    // ---\r\n    \r\n})(jQuery);"]}